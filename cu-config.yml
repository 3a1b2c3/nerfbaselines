defaults:
  - "$CU_DEFAULT_CONFIGS/ciirc.yml"
  - "$CU_DEFAULT_CONFIGS/karolina.yml"
remote: "karolina"
package: "none"
wandb-entity: "kulhanek"
wandb-project: "tetra-gen"

remotes:
  docker:
    type: docker
    image: kulhanek/dev:tetranerf-latest
    mount:
      - ["$HOME/.bash_history", "/home/user/.bash_history"]
      - ["$(mkdir -p $PREFIX/.cache/torch; echo $PREFIX/.cache/torch)", "/home/user/.cache/torch"]
      - ["$(mkdir -p $PREFIX/.config/wandb; echo $PREFIX/.config/wandb)", "/home/user/.config/wandb"]
      - ["$(mkdir -p $PREFIX/.vscode-server; echo $PREFIX/.vscode-server)", "/home/user/.vscode-server"]
      - ["$PREFIX", "$PREFIX"]
      - ["$HOME/.wandb_setup", "/home/user/.wandb_setup"]
    init-script: |
      export WANDB_PROJECT=tetra-gen
      if [ "$JOBTYPE" == "standard" ]; then
        export WANDB_NAME="$JOBNAME"
      fi
      export SHELL=/bin/bash # the docker image has /bin/sh as the default shell
      pip install gin-config
     
plugins:
  apptainer:
    enabled: false
    image: "$APPTAINER_IMAGES/kulhanek@dev:tetranerf-latest.sif"
    init-script@append: |
      export WANDB_PROJECT=tetra-gen
      if [ "$JOBTYPE" == "standard" ]; then
        export WANDB_NAME="$JOBNAME"
      fi
      pip install gin-config

presets:
  tetragen:
    package: "build"
    plugins:
      apptainer:
        bind@append:
          - ["$(mkdir -p source/tetra-nerf; echo $PWD/source/tetra-nerf)", "/home/user/tetra-nerf"]
        init-script@append: |
          cu-build () {
            _cwd="$PWD"
            cd /home/user/tetra-nerf && \
            if [ -e Makefile ]; then make; else cmake . && make; fi
            status="$?"
            cd "$_cwd"
            return $status
          }
          export -f cu-build
          cu-build
          export PYTHONPATH="/home/user/tetra-nerf:$PYTHONPATH"
          export NERFSTUDIO_METHOD_CONFIGS="tetra-nerf=tetranerf.nerfstudio.registration:tetranerf,tetra-nerf-original=tetranerf.nerfstudio.registration:tetranerf_original"
          export PYTHONPATH="$PWD/source/tetra-gen:$PYTHONPATH"

    remotes:
      docker:
        init-script@append: |
          cu-build () {
            rm -rf /home/user/tetra-nerf
            ln -s /workspace/source/tetra-nerf /home/user/tetra-nerf
            _cwd="$PWD"
            cd /home/user/tetra-nerf && \
            if [ -e Makefile ]; then make; else cmake . && make; fi
            status="$?"
            cd "$_cwd"
            return $status
          }
          export -f cu-build
          cu-build
          export PYTHONPATH="/home/user/tetra-nerf:$PYTHONPATH"
          export PYTHONPATH="$PWD/source/tetra-gen:$PYTHONPATH"
          export NERFSTUDIO_METHOD_CONFIGS="tetra-nerf=tetranerf.nerfstudio.registration:tetranerf,tetra-nerf-original=tetranerf.nerfstudio.registration:tetranerf_original"

  ciirc-optix@autoenable:
    conditions:
      - "remote.name == 'ciirc'"
    plugins:
      apptainer:
        bind@append:
          - ["$HOME/source/optix-72", "/opt/optix"]
